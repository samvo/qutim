Basic Installation
==================

        qutIM uses the qbs (Qt Build Suite)[http://qt-project.org/wiki/QBS] build system.
The simple instructions for building qutIM are these commands:

                        mkdir ../qutim-build
                        qbs build -d ../qutim-build
                        qbs install -d ../qutim-build
                        
	You probably need to setup qbs with preferred Qt version (5.5+),
so if you are using qbs first time, follow this way (also useful for maintainers):

                        qbs setup-qt /usr/bin/qmake my-own-qt-5-5
                        
If you do not want to type profile:... every time
                        qbs config defaultProfile my-own-qt-5-5

                        qbs setup-toolchains /usr/bin/gcc my-gcc
                        qbs config profiles.my-own-qt-5-5.baseProfile my-gcc
                        
And now build:
                        qbs build debug profile:my-own-qt-5-5 project.addressSanitizer:true

Available options:

                        project.useRPaths:false jreen.useRPaths:false — to disable RPath

                        Protocols.systemJreen:true — to use system Jreen

                        project.addressSanitizer:true — to enable address sanitizer. Must not be enabled for users (only for devs)

And after build install qutIM into some directory:

                        qbs install --no-build --install-root ./install-root/ profile:my-own-qt-5-5

Old (CMake-related) info
========================

        Various components of qutIM have other dependencies as well.
If these are not met when the 'cmake' command is run, those components
will not be built. The output of 'cmake' should make it clear what these
dependencies are and how to meet them.

        Arguments can be given to cmake similar to those given to a traditional
configure script, like the install prefix. See 'cmake --help-full' for more
information. For example, 'configure --prefix=/usr/lib' translates to
'cmake -DCMAKE_INSTALL_PREFIX=/usr/lib'.
